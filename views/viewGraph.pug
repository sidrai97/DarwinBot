html
    head
        title= exercisename
        meta(charset="utf-8")
        meta(name="viewport", content="width=device-width, initial-scale=1")
        meta(name="theme-color", content="#427BBE")
        link(rel="stylesheet", href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css")
        script(src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js")
        script(src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js")
        style.
            .bar{
            fill: steelblue;
            }

            .bar:hover{
            fill: brown;
            }

            .axis {
            font: 10px sans-serif;
            }

            .axis path,
            .axis line {
            fill: none;
            stroke: #000;
            shape-rendering: crispEdges;
            }
    body
        input(type="hidden", name="userid", value= userid)
        script(src="https://d3js.org/d3.v3.min.js")
        script(type='text/javascript').
            var data=#{options};
            //data=data.replace(/'/g,'"')
            //data=JSON.parse(data);
            var y_axis="#{yaxis}";

            // set the dimensions of the canvas
            var margin = {top: 20, right: 20, bottom: 70, left: 40},
                width = 600 - margin.left - margin.right,
                height = 300 - margin.top - margin.bottom;


            // set the ranges
            var x = d3.scale.ordinal().rangeRoundBands([0, width], .05);
            var y = d3.scale.linear().range([height, 0]);

            // define the axis
            var xAxis = d3.svg.axis()
                .scale(x)
                .orient("bottom")
            var yAxis = d3.svg.axis()
                .scale(y)
                .orient("left")
                .ticks(10);

            // add the SVG element
            var svg = d3.select("body").append("svg")
                .attr("width", width + margin.left + margin.right)
                .attr("height", height + margin.top + margin.bottom)
                .append("g")
                .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

            // load the data
            /*data.forEach(function(d) {
                d.logDate = d.logDate;
                d.freq = +d.freq;
            });
            */
            console.log(data)

            // scale the range of the data
            x.domain(data.map(function(d) { return d.logDate; }));
            y.domain([0, d3.max(data, function(d) { return d.freq; })]);

            // add axis
            svg.append("g")
            .attr("class", "x axis")
            .attr("transform", "translate(0," + height + ")")
            .call(xAxis)
            .selectAll("text")
            .style("text-anchor", "end")
            .attr("dx", "-.8em")
            .attr("dy", "-.55em")
            .attr("transform", "rotate(-90)" );

            svg.append("g")
            .attr("class", "y axis")
            .call(yAxis)
            .append("text")
            .attr("transform", "rotate(-90)")
            .attr("y", 5)
            .attr("dy", ".71em")
            .style("text-anchor", "end")
            .text(y_axis);

            // Add bar chart
            svg.selectAll("bar")
            .data(data)
            .enter().append("rect")
            .attr("class", "bar")
            .attr("x", function(d) { return x(d.logDate); })
            .attr("width", x.rangeBand())
            .attr("y", function(d) { return y(d.freq); })
            .attr("height", function(d) { return height - y(d.freq); });